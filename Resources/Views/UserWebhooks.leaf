<html>
    <script>
        window.onload = function() {
          loadWebhooks()
        };
        
        function createWebhook() {
            fetch('/webhooks/new', { method: 'POST'})
            .then((response) => {
                loadWebhooks();
            })
        }

        function removeRowsFromWebhookTable() {
            var table = document.getElementById('webhookTable');
            var rows = table.getElementsByTagName('tr');
            var rowCount = rows.length;

            for (var x=rowCount-1; x>0; x--) {
                table.removeChild(rows[x]);
            }
        }

        function removePreviousAndNextButtons() {
            let nextButton = document.getElementById("nextButton")
            if (nextButton) {
                document.getElementById("nextButtonDiv").removeChild(nextButton)
            }
            var previousButton = document.getElementById("previousButton")
            if (previousButton) {
                document.getElementById("previousButtonDiv").removeChild(previousButton)
            }
        }

        function makeButton(title, buttonId, pageToLoad) {
            var button = document.createElement('button');
            button.id = buttonId
            button.innerHTML = title;
            button.type = "button"
            button.class = "btn btn-outline-primary"
            button.onclick = function(){
                removeRowsFromWebhookTable()
                removePreviousAndNextButtons()
                loadWebhooks(pageToLoad)
            };  
            return button
        }

        function loadWebhooks(page) {
        
            fetch('/allWebhooks?page=' + page, {
            headers: {
             'Content-Type': 'application/json'
            }
            })
            .then((response) => {
              return response.json();
            })
            .then((result) => {
                // turn on or off the previous and next buttons
                var totalPages = result["pages"]
                var currentPage = result["page"]
                var buttonDiv = document.getElementById("prevNextButtons");

                if (currentPage > 1) {
                    var button = makeButton("Previous", "previousButton", currentPage - 1)
                    document.getElementById("previousButtonDiv").appendChild(button)   
                }
                if (currentPage < totalPages) {
                    var button = makeButton("Next", "nextButton", currentPage + 1)
                    document.getElementById("nextButtonDiv").appendChild(button)          
                }
                var webhooks = result["callbacks"]
                console.log(webhooks)
                for (i = 0; i < webhooks.length; i++) {
                    var webhook = webhooks[i]
                    var table = document.getElementById("webhookTable");
                
                    var row = document.createElement("TR");
                    // a name for looking up the thing we will delete from the table later
                    row.id = "webhook-"+webhook.id 

                    table.appendChild(row);
                    row.insertCell(0).innerHTML = webhook.callbackid
                    row.insertCell(1).innerHTML = webhook.verified
                    row.insertCell(2).innerHTML = webhook.uri
                    row.insertCell(3).innerHTML = webhook.event
                    row.insertCell(4).innerHTML = "<a href=/webhooks/delete?id=" + webhook.callbackid + ">delete</a>"
                }
            });
        }

        function loadInvoices() {

                   fetch('/invoices', {
                   headers: {
                    'Content-Type': 'application/json'
                   }
                   })
                   .then((response) => {
                     return response.json();
                   })
                   .then((result) => {
                      alert(result)
                   });
               }
        
    </script>
    <head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
    </head>

<body onload="loadWebhooks(1)">
    <div class="container-fluid" >
        
        <table class="table" id="webhookTable">
            <thead>
                <tr>
                    <th>id</th>
                    <th>verified</th>
                    <th>url</th>
                    <th>event</th>
                    <th>delete</th>
                </tr>
            </thead>
            <tbody id="tableBody">
              
            </tbody>
        </table>
    </div>
    <div class="container-fluid" id="prevNextButtons">
        <div id="previousButtonDiv"></div>
        <div id="nextButtonDiv"></div>
    </div>
    <button type="button" onclick="createWebhook()" class="btn btn-outline-primary">Create All Webhooks</button>
    <button type="button" onclick="loadWebhooks()" class="btn btn-outline-primary">Load Webhook</button>
    <button type="button" onclick="loadInvoices()" class="btn btn-outline-primary">Load Invoices</button>

</body>
</html>

